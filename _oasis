OASISFormat: 0.3
Plugins: META (0.3), StdFiles (0.3)
Name: ocaml-efl
Version: 0.01
Synopsis: An OCaml interface to the Enlightenment Foundation Libraries (EFL).
License: zlib
Authors: Alexis Bernadet <alexis.bernadet ate noos.fr>
BuildTools: ocamlbuild
XStdFilesREADME: false
XStdFilesINSTALL: false
XStdFilesAUTHORSFilename: AUTHORS
Library efl
  Path: src
  Pack: true
  CCLib:
    -lelementary -lm -leet -levas -lecore -leina -lecore_evas -lecore_file
    -ledje -lefreet -lefreet_mime -lefreet_trash -ledbus -ldbus-1 -lpthread
    -lrt -lethumb_client -lecore_imf -lecore_con
  Modules:
    Evas, Evas_object, Evas_object_smart, Ecore, Edje, Elm, Elm_object,
    Elm_layout, Elm_scroller, Elm_win, Elm_bg, Elm_label, Elm_box, Elm_button,
    Elm_frame, Elm_icon, Elm_entry, Elm_gengrid, Elm_check, Elm_inwin,
    Elm_win_inwin, Elm_naviframe, Elm_theme, Elm_radio, Elm_app, Elm_image,
    Elm_separator, Elm_notify, Elm_spinner, Elm_clock, Elm_hover, Ecore_timer,
    Elm_config_engine
  CSources:
    include.h, eina_wrap.c, eina_wrap.h, evas_wrap.c, evas_wrap.h, edje_wrap.c,
    edje_wrap.h, elm_wrap.c, elm_wrap.h, elm_scroller_wrap.c,
    elm_scroller_wrap.h, elm_button_wrap.c, elm_label_wrap.c, elm_entry_wrap.c,
    elm_layout_wrap.c, elm_radio_wrap.c, elm_check_wrap.c, elm_box_wrap.c,
    ecore_wrap.c, ecore_wrap.h, elm_win_wrap.c, elm_app_wrap.c,
    elm_image_wrap.c, elm_separator_wrap.c, elm_notify_wrap.c, elm_icon_wrap.c,
    elm_bg_wrap.c, elm_object_wrap.c, elm_spinner_wrap.c, elm_clock_wrap.c,
    elm_inwin_wrap.c, elm_hover_wrap.c, elm_config_engine_wrap.c
Document efl_doc
  Type: ocamlbuild (0.3)
  BuildTools: ocamldoc
  Title: API of ocaml-efl
  XOCamlbuildPath: src
  XOCamlbuildLibraries: efl
Executable test
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: test.ml
  CompiledObject: best
Executable test2
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: test2.ml
  CompiledObject: byte
Executable test3
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: test3.ml
Executable button_example_00
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: button_example_00.ml
Executable button_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: button_example_01.ml
Executable label_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: label_example_01.ml
Executable entry_example
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: entry_example.ml
Executable radio_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: radio_example_01.ml
Executable check_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: check_example_01.ml
Executable box_example_02
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: box_example_02.ml
Executable win_example
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: win_example.ml
Executable image_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: image_example_01.ml
Executable icon_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: icon_example_01.ml
Executable bg_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: bg_example_01.ml
Executable bg_example_02
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: bg_example_02.ml
Executable bg_example_03
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: bg_example_03.ml
Executable notify_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: notify_example_01.ml
Executable separaor_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: separator_example_01.ml
Executable layout_example_01
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: layout_example_01.ml
Executable layout_example_02
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: layout_example_02.ml
Executable layout_example_03
  Path: examples
  Install: false
  Build$: flag(tests)
  BuildDepends: efl
  MainIs: layout_example_03.ml
